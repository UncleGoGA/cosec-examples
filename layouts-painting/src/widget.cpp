#include "widget.hpp"

#include "ui_widget.h"

#include <QtWidgets/QMessageBox>

Widget::Widget(QWidget* parent) :
    QWidget{parent},
    ui_{new Ui::Widget}
{
    // Add everything that was done in the designer to the widget.
    ui_->setupUi(this);
    // Make a connection manually.
    connect(ui_->displayButton,&QPushButton::clicked,this,&Widget::doDisplay);
    // We can connect and arbitrary functor, but
    // be careful when capturing by reference - sender
    // takes ownership of the moved functor which will
    // live until disconnected, which is more than locals
    // in this function.
    connect(ui_->checkBox,&QCheckBox::clicked,[this](bool checked){
        QFont font = ui_->checkBox->font();
        font.setBold(checked);
        ui_->checkBox->setFont(font);
    });
}

Widget::~Widget() = default;

void Widget::doDisplay()
{
    QMessageBox::information(this,tr("Title"),
                             tr("You wrote: '%1'.").arg(ui_->lineEdit->text()));
}

// This slot is automatically connected by the call to
// QMetaObject::connectSlotsyName which is present ui_*.h
// header generated by uic. The general naming convention
// is on_<object_name>_<signal_name>.
void Widget::on_lineEdit_textChanged(const QString& text)
{
    // Toggle whether Clear button is enabled depending
    // on whether anyhting is entered in the text box.
    ui_->clearButton->setEnabled(!text.isEmpty());
}
